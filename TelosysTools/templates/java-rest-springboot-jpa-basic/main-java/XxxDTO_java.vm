## --------------------------------------------------
#if ( $entity.isJoinEntity() )
#cancel("No DTO class for join entity")
#end
## --------------------------------------------------
#checkId($entity)
#parse("include/init_var_entity.vm")
#parse("include/java_header.vm")
##---------------------------------------------------------------------------------------
package ${target.javaPackageFromFolder(${SRC})};

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnore;
#foreach( $import in $java.imports($entity) )
import $import;
#end

/**
 * DTO class for "${entity.name}"
 *
 * @author Telosys
 *
 */
public class ${dtoClass} extends BaseDTO implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- PRIMARY KEY 
#foreach( $attribute in $entity.keyAttributes )
    private $attribute.type $attribute.name #if($attribute.hasInitialValue())= ${attribute.initialValue} #end;
#end
    //--- OTHER DATA FIELDS 
#foreach( $attribute in $entity.nonKeyAttributes )
    private $attribute.type $attribute.name #if($attribute.hasInitialValue())= ${attribute.initialValue} #end;
#end
#if ( $entity.hasLinks() )	
    //--- LINKS ( RELATIONSHIPS )
#foreach( $link in $entity.links )
    private ${link.fieldType}DTO $link.fieldName ; 
#end
#end

    /**
     * Constructor
     */
    public ${dtoClass}() {
		super();
    }
    
##    //--- GETTERS & SETTERS FOR FIELDS
#foreach( $attribute in $entity.keyAttributes )
    public void ${attribute.setter}( $attribute.type $attribute.name ) {
        this.$attribute.name = $attribute.name ;
    }
    public $attribute.type ${attribute.getter}() {
        return this.$attribute.name;
    }

#end

    @Override
    @JsonIgnore
    public Object getEntityId() {
        return this.$entity.keyAttribute.name;
    }

#foreach( $attribute in $entity.nonKeyAttributes )
    public void ${attribute.setter}( $attribute.type $attribute.name ) {
        this.$attribute.name = $attribute.name ;
    }
    public $attribute.type ${attribute.getter}() {
        return this.$attribute.name;
    }

#end
#foreach( $link in $entity.selectedLinks )
    public ${link.fieldType}DTO ${link.getter}() {
        return this.${link.fieldName};
    } 

#end
	@Override
## This function generates a 'toString' method with indentation level = 1 (1 tab)
$java.toStringMethod($entity, 1)
}
